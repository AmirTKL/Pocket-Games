/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GamesIndexRouteImport } from './routes/games/index'
import { Route as GamesGameNameRouteImport } from './routes/games/$gameName'
import { Route as GamesFavoritesIndexRouteImport } from './routes/games/favorites/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesIndexRoute = GamesIndexRouteImport.update({
  id: '/games/',
  path: '/games/',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesGameNameRoute = GamesGameNameRouteImport.update({
  id: '/games/$gameName',
  path: '/games/$gameName',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesFavoritesIndexRoute = GamesFavoritesIndexRouteImport.update({
  id: '/games/favorites/',
  path: '/games/favorites/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/games/$gameName': typeof GamesGameNameRoute
  '/games': typeof GamesIndexRoute
  '/games/favorites': typeof GamesFavoritesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/games/$gameName': typeof GamesGameNameRoute
  '/games': typeof GamesIndexRoute
  '/games/favorites': typeof GamesFavoritesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/games/$gameName': typeof GamesGameNameRoute
  '/games/': typeof GamesIndexRoute
  '/games/favorites/': typeof GamesFavoritesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/games/$gameName' | '/games' | '/games/favorites'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/games/$gameName' | '/games' | '/games/favorites'
  id: '__root__' | '/' | '/games/$gameName' | '/games/' | '/games/favorites/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GamesGameNameRoute: typeof GamesGameNameRoute
  GamesIndexRoute: typeof GamesIndexRoute
  GamesFavoritesIndexRoute: typeof GamesFavoritesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/': {
      id: '/games/'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/$gameName': {
      id: '/games/$gameName'
      path: '/games/$gameName'
      fullPath: '/games/$gameName'
      preLoaderRoute: typeof GamesGameNameRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/favorites/': {
      id: '/games/favorites/'
      path: '/games/favorites'
      fullPath: '/games/favorites'
      preLoaderRoute: typeof GamesFavoritesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GamesGameNameRoute: GamesGameNameRoute,
  GamesIndexRoute: GamesIndexRoute,
  GamesFavoritesIndexRoute: GamesFavoritesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
